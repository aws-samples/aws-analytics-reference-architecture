apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: tooling-nodes
spec:
  # References cloud provider-specific custom resource, see your cloud provider specific documentation
  providerRef:
    name: tooling-nodes

  # Labels are arbitrary key-values that are applied to all nodes
  labels:
    role: tooling

  # Requirements that constrain the parameters of provisioned nodes.
  # These requirements are combined with pod.spec.affinity.nodeAffinity rules.
  # Operators { In, NotIn } are supported to enable including or excluding values
  requirements:
    # Include general purpose instance families
    - key: "karpenter.k8s.aws/instance-category"
      operator: In
      values: ["t", "m"]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
    # Exclude smaller instance sizes
    - key: "karpenter.k8s.aws/instance-size"
      operator: In
      values: [medium, small, large]
    - key: "karpenter.sh/capacity-type" # If not included, the webhook for the AWS cloud provider will default to on-demand
      operator: In
      values: ["on-demand"]
    - key: "karpenter.k8s.aws/instance-hypervisor"
      operator: In
      values: ["nitro"]

  # Resource limits constrain the total size of the cluster.
  # Limits prevent Karpenter from creating new instances once the limit is exceeded.
  limits:
    resources:
      cpu: "100"
      memory: 100Gi

  # Priority given to the provisioner when the scheduler considers which provisioner
  # to select. Higher weights indicate higher priority when comparing provisioners.
  # Specifying no weight is equivalent to specifying a weight of 0.
  weight: 50
  
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: tooling-nodes
spec:
  amiFamily: AL2
  subnetSelector:
    karpenter.sh/discovery: {{cluster-name}}
  securityGroupSelector:
    karpenter.sh/discovery: {{cluster-name}}
  tags:
    KarpenerProvisionerName: "tooling"